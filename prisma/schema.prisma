// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applications {
  id                Int              @id @default(autoincrement())
  benefitId         String
  status            String
  applicationData   Json             // form fields saved as they are dynamic
  customerId        String?
  bapId             String?
  calculatedAmount  String?
  finalAmount       String?
  applicationFiles  ApplicationFiles[] @relation("ApplicationsToApplicationFiles")
  createdAt         DateTime         @default(now()) // Automatically set on creation
  updatedAt         DateTime         @updatedAt      // Automatically updated on modification
}

model ApplicationFiles {
  id                 Int          @id @default(autoincrement())
  storage            String
  filePath           String?
  verificationStatus Json?
  applicationId      Int
  application        Applications @relation(fields: [applicationId], references: [id], name: "ApplicationsToApplicationFiles")
  createdAt          DateTime     @default(now()) // Automatically set on creation
  updatedAt          DateTime     @updatedAt      // Automatically updated on modification
}

model Users {
  id          Int        @id @default(autoincrement())
  s_id        String     @unique
  roles       String[]   // Array of strings to store multiple roles, can be empty
  s_roles     String[]   // Array of strings to store multiple roles, can be empty
  first_name  String
  middle_name String?
  last_name   String?
  email       String     @unique
  phone       String?
  enabled     Boolean    @default(true)
  blocked     Boolean    @default(false)
  createdAt   DateTime   @default(now()) // Automatically set on creation
  updatedAt   DateTime?  @updatedAt      // Automatically updated on modification
}
