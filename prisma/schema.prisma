generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applications {
  id                         Int                @id @default(autoincrement())
  benefitId                  String
  status                     String
  applicationData            String
  createdAt                  DateTime           @default(now())
  updatedAt                  DateTime           @updatedAt
  bapId                      String?
  customerId                 String?
  finalAmount                String?
  orderId                    String?
  remark                     String?
  actionLog                  Json?
  updatedBy                  Int?
  calculationsProcessedAt    DateTime?
  calculatedAmount           Json?
  documentVerificationStatus String?
  eligibilityCheckedAt       DateTime?
  eligibilityResult          Json?
  eligibilityStatus          String?            @default("pending")
  transactionId              String?
  applicationFiles           ApplicationFiles[] @relation("ApplicationsToApplicationFiles")
}

model ApplicationFiles {
  id                       Int          @id @default(autoincrement())
  storage                  String
  filePath                 String?
  verificationStatus       Json?
  applicationId            Int
  createdAt                DateTime     @default(now())
  updatedAt                DateTime     @updatedAt
  issuerName               String?
  documentSubmissionReason Json?
  documentSubtype          String?
  documentType             String?
  application              Applications @relation("ApplicationsToApplicationFiles", fields: [applicationId], references: [id])
}

model Users {
  id          Int       @id @default(autoincrement())
  s_id        String    @unique
  first_name  String
  middle_name String?
  last_name   String?
  email       String    @unique
  phone       String?
  enabled     Boolean   @default(true)
  blocked     Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  roles       String[]
  s_roles     String[]
}

model Provider {
  id                       Int       @id @default(autoincrement())
  catalogManagerId         String    @unique
  catalogManagerDocumentId String    @unique
  name                     String    @unique
  catalogManagerCode       String    @unique
  catalogManagerRole       String[]
  description              String
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  publishedAt              DateTime?
  locale                   String?
}
